name: bomsbro-blog-webapp

on:
  push:
    branches: [ "master" ]
    
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      # CHECK OUT TO $GITHUB_WORKSPACE
      - name: Check out
        uses: actions/checkout@v3
        
      # BUILD IMAGE
      - name: Compose Images
        run: 
          docker-compose up -d --build
          
      # PULL AND LEARN IMAGE ON INSTANCE
      - name: Deploy Proxy
        run: bash ${GITHUB_WORKSPACE}/scripts/bomsbro-blog-web-app-nginx-deploy.sh 
          ${{secrets.REMOTE_HOST}} 
          ${{secrets.REMOTE_SSH_PORT}} 
          ${{secrets.REMOTE_USERNAME}} 
          ${{secrets.REMOTE_PASSWORD}}
          'bomsbro-blog-web-app_nginx'

      - name: Deploy Webapp
        run: bash ${GITHUB_WORKSPACE}/scripts/bomsbro-blog-web-app-nextjs-deploy.sh 
          ${{secrets.REMOTE_HOST}} 
          ${{secrets.REMOTE_SSH_PORT}} 
          ${{secrets.REMOTE_USERNAME}} 
          ${{secrets.REMOTE_PASSWORD}}
          'bomsbro-blog-web-app_nextjs'

       # CLEAN UP IMAGES ON INSTANCE
      - name: Prune Images
        run: |
          sudo apt-get install expect
          expect -c "
          set timeout 5
          spawn sshpass -p \"${secrets.REMOTE_PASSWORD}\" ssh -p \"${secrets.REMOTE_SSH_PORT}\" \"${secrets.REMOTE_USERNAME@$REMOTE_HOST}\" -o StrictHostKeyChecking=no \'docker image prune\'
          expect -nocase \"\[y/N\]\"
          send \"y\"
          exit 0
          "

      # SING IN DOCKER HUB
      #- name: Sign in
      #  uses: docker/login-action@v1
      #  with:
      #    username: ${{secrets.DOCKERHUB_USERNAME}}
      #    password: ${{secrets.DOCKERHUB_PASSWORD}}
          
      # BACK UP IMAGE ON DOCKER HUB REPOSITORY
      #- name: Release images
      #  env:
      #    NAME: ${{secrets.DOCKERHUB_USERNAME}}
      #    REPO: ${{secrets.DOCKERHUB_PASSWORD}}
      #  run:
      #    docker tag $REPO:latest $NAME/$REPO:latest
      #    docker push $NAME/$REPO:latest     
